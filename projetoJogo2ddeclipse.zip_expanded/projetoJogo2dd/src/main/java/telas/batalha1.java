/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import javax.swing.JOptionPane;

/**
 *
 * @author Silva
 */
public class batalha1 extends javax.swing.JFrame {

    /**
     * Creates new form batalha1
     */
    public batalha1() {
        initComponents();

        vidaOponente.setMaximum(100); // Define o valor máximo da barra de progresso do oponente
        vidaOponente.setValue(100);
        minhaVida.setMaximum(100); // Define o valor máximo da barra de progresso do oponente
        minhaVida.setValue(100);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        minhaVida = new javax.swing.JProgressBar();
        vidaOponente = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ataque4 = new javax.swing.JButton();
        ataque1 = new javax.swing.JButton();
        ataque2 = new javax.swing.JButton();
        ataque3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(790, 450));
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);
        jPanel1.add(minhaVida);
        minhaVida.setBounds(80, 160, 146, 14);
        jPanel1.add(vidaOponente);
        vidaOponente.setBounds(600, 200, 146, 14);

        jButton1.setText("Terminar Batalha");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(50, 380, 130, 25);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VENUSAUR");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 140, 90, 19);

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("EEVEE");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(700, 180, 60, 19);

        ataque4.setText("RAIO SOLAR");
        ataque4.setBorderPainted(false);
        ataque4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ataque4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ataque4ActionPerformed(evt);
            }
        });
        jPanel1.add(ataque4);
        ataque4.setBounds(390, 360, 160, 50);

        ataque1.setText("NEVASCA DE PETALAS");
        ataque1.setBorderPainted(false);
        ataque1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ataque1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ataque1ActionPerformed(evt);
            }
        });
        jPanel1.add(ataque1);
        ataque1.setBounds(220, 320, 170, 40);

        ataque2.setText("CHICOTE DE VINHA");
        ataque2.setBorderPainted(false);
        ataque2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ataque2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ataque2ActionPerformed(evt);
            }
        });
        jPanel1.add(ataque2);
        ataque2.setBounds(390, 320, 160, 40);

        ataque3.setText("BOMBA DE LODO");
        ataque3.setBorderPainted(false);
        ataque3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ataque3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ataque3ActionPerformed(evt);
            }
        });
        jPanel1.add(ataque3);
        ataque3.setBounds(220, 360, 170, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagensTelas/_tela batalha  1.png")));// NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(-570, -320, 1350, 1080);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, -10, 1985, 920);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ataque2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ataque2ActionPerformed
        if (minhaVida.getValue() <= 0 || vidaOponente.getValue() <= 0) {
            JOptionPane.showMessageDialog(this, "A batalha acabou!", "Fim da Batalha", JOptionPane.INFORMATION_MESSAGE);
            return;  // Não execute mais ações se a batalha acabou
        }

        int seuDano = 20;  // Dano que seu ataque causa
        int seuContraAtaque = 10;  // Dano que o oponente causa em você

        int vidaAtualOponente = vidaOponente.getValue();
        int vidaAtualSua = minhaVida.getValue();

        if (vidaAtualOponente - seuDano >= 0) {
            vidaAtualOponente -= seuDano;
        } else {
            vidaAtualOponente = 0;
        }

        vidaOponente.setValue(vidaAtualOponente);

        if (vidaAtualOponente == 0) {
            JOptionPane.showMessageDialog(this, "O oponente foi derrotado!", "Vitória", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a vitória.
            return;
        }

        // Verifique se sua vida chegou a zero
        if (vidaAtualSua - seuContraAtaque >= 0) {
            vidaAtualSua -= seuContraAtaque;
        } else {
            vidaAtualSua = 0;
            JOptionPane.showMessageDialog(this, "Você foi derrotado pelo oponente!", "Derrota", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a derrota.
            return;
        }

        minhaVida.setValue(vidaAtualSua);

        // Exiba informações em um JOptionPane
        String mensagem = "Chicote de vinha causou " + seuDano + " de dano ao oponente.\n";
        mensagem += "O oponente contra-atacou e causou " + seuContraAtaque + " de dano em você.";

        JOptionPane.showMessageDialog(this, mensagem, "Resultado do Ataque", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ataque2ActionPerformed

    private void ataque1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ataque1ActionPerformed
       
        
        if (minhaVida.getValue() <= 0 || vidaOponente.getValue() <= 0) {
            JOptionPane.showMessageDialog(this, "A batalha acabou!", "Fim da Batalha", JOptionPane.INFORMATION_MESSAGE);
            return;  // Não execute mais ações se a batalha acabou
        }

        int seuDano = 10;  // Dano que seu ataque causa
        int seuContraAtaque = 20;  // Dano que o oponente causa em você

        int vidaAtualOponente = vidaOponente.getValue();
        int vidaAtualSua = minhaVida.getValue();

        if (vidaAtualOponente - seuDano >= 0) {
            vidaAtualOponente -= seuDano;
        } else {
            vidaAtualOponente = 0;
        }

        vidaOponente.setValue(vidaAtualOponente);

        if (vidaAtualOponente == 0) {
            JOptionPane.showMessageDialog(this, "O oponente foi derrotado!", "Vitória", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a vitória.
             return; 
        }

        // Verifique se sua vida chegou a zero
        if (vidaAtualSua - seuContraAtaque >= 0) {
            vidaAtualSua -= seuContraAtaque;
        } else {
            vidaAtualSua = 0;
            JOptionPane.showMessageDialog(this, "Você foi derrotado pelo oponente!", "Derrota", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a derrota.
             return; 
        }

        minhaVida.setValue(vidaAtualSua);

        // Exiba informações em um JOptionPane
        String mensagem = "Nevasca de pétalas causou " + seuDano + " de dano ao oponente.\n";
        mensagem += "O oponente contra-atacou e causou " + seuContraAtaque + " de dano em você.";

        JOptionPane.showMessageDialog(this, mensagem, "Resultado do Ataque", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ataque1ActionPerformed

    private void ataque3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ataque3ActionPerformed
        
        if (minhaVida.getValue() <= 0 || vidaOponente.getValue() <= 0) {
            JOptionPane.showMessageDialog(this, "A batalha acabou!", "Fim da Batalha", JOptionPane.INFORMATION_MESSAGE);
            return;  //  Não execute mais ações se a batalha acabou
        }
        
        int seuDano = 10;  // Dano que seu ataque causa
        int seuContraAtaque = 35;  // Dano que o oponente causa em você

        int vidaAtualOponente = vidaOponente.getValue();
        int vidaAtualSua = minhaVida.getValue();

        if (vidaAtualOponente - seuDano >= 0) {
            vidaAtualOponente -= seuDano;
        } else {
            vidaAtualOponente = 0;
        }

        vidaOponente.setValue(vidaAtualOponente);

        if (vidaAtualOponente == 0) {
            JOptionPane.showMessageDialog(this, "O oponente foi derrotado!", "Vitória", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a vitória.
            return;
        }

        // Verifique se sua vida chegou a zero
        if (vidaAtualSua - seuContraAtaque >= 0) {
            vidaAtualSua -= seuContraAtaque;
        } else {
            vidaAtualSua = 0;
            JOptionPane.showMessageDialog(this, "Você foi derrotado pelo oponente!", "Derrota", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a derrota.
             return;
            
        }

        minhaVida.setValue(vidaAtualSua);

        // Exiba informações em um JOptionPane
        String mensagem = "Bomba de lodo causou " + seuDano + " de dano ao oponente.\n";
        mensagem += "O oponente contra-atacou e causou " + seuContraAtaque + " de dano em você.";

        JOptionPane.showMessageDialog(this, mensagem, "Resultado do Ataque", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ataque3ActionPerformed

    private void ataque4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ataque4ActionPerformed
        
         if (minhaVida.getValue() <= 0 || vidaOponente.getValue() <= 0) {
            JOptionPane.showMessageDialog(this, "A batalha acabou!", "Fim da Batalha", JOptionPane.INFORMATION_MESSAGE);
            return;  // Não execute mais ações se a batalha acabou
        }
        
        int seuDano = 20;  // Dano que seu ataque causa
        int seuContraAtaque = 15;  // Dano que o oponente causa em você

        int vidaAtualOponente = vidaOponente.getValue();
        int vidaAtualSua = minhaVida.getValue();

        if (vidaAtualOponente - seuDano >= 0) {
            vidaAtualOponente -= seuDano;
        } else {
            vidaAtualOponente = 0;
        }

        vidaOponente.setValue(vidaAtualOponente);

        if (vidaAtualOponente == 0) {
            JOptionPane.showMessageDialog(this, "O oponente foi derrotado!", "Vitória", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a vitória.
            return;
        }

        // Verifique se sua vida chegou a zero
        if (vidaAtualSua - seuContraAtaque >= 0) {
            vidaAtualSua -= seuContraAtaque;
        } else {
            vidaAtualSua = 0;
            JOptionPane.showMessageDialog(this, "Você foi derrotado pelo oponente!", "Derrota", JOptionPane.INFORMATION_MESSAGE);
            // Faça o que for necessário após a derrota.
            return;
        }

        minhaVida.setValue(vidaAtualSua);

        // Exiba informações em um JOptionPane
        String mensagem = "Chicote de vinha causou " + seuDano + " de dano ao oponente.\n";
        mensagem += "O oponente contra-atacou e causou " + seuContraAtaque + " de dano em você.";

        JOptionPane.showMessageDialog(this, mensagem, "Resultado do Ataque", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ataque4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        
       new conversa2().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(batalha1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(batalha1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(batalha1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(batalha1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new batalha1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ataque1;
    private javax.swing.JButton ataque2;
    private javax.swing.JButton ataque3;
    private javax.swing.JButton ataque4;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar minhaVida;
    private javax.swing.JProgressBar vidaOponente;
    // End of variables declaration//GEN-END:variables
}
